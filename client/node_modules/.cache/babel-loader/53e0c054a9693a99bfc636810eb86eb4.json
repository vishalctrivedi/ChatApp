{"ast":null,"code":"import _classCallCheck from \"/home/admin1/chatapp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/admin1/chatapp/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/admin1/chatapp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/admin1/chatapp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/admin1/chatapp/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/admin1/chatapp/client/src/screens/resetPassword.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { resetPassword } from \"../services/userServices\";\nimport Buttons from \"../components/button\";\nimport Inputs from \"../components/input\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nvar ResetPassword =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResetPassword, _Component);\n\n  function ResetPassword(props) {\n    var _this;\n\n    _classCallCheck(this, ResetPassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResetPassword).call(this, props));\n\n    _this.handlePasswordChange = function (event) {\n      var Password = event.target.value;\n\n      _this.setState({\n        Password: Password\n      });\n    };\n\n    _this.handlenewPasswordChange = function (event) {\n      var newPassword = event.target.value;\n\n      _this.setState({\n        newPassword: newPassword\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.Password === \"\") {\n        _this.setState({\n          openSnackBar: true,\n          snackBarMessage: \"Password cannot be empty\"\n        });\n      } else if (_this.state.newPassword === \"\") {\n        _this.setState({\n          openSnackBar: true,\n          snackBarMessage: \"Confirm Password cannot be empty\"\n        });\n      } else if (_this.state.Password.length < 6) {\n        _this.setState({\n          openSnackBar: true,\n          snackBarMessage: \"Password must be of atleast 6 characters long\"\n        });\n      } else if (_this.state.newPassword.length < 6) {\n        _this.setState({\n          openSnackBar: true,\n          snackBarMessage: \"Confirm Password must be of atleast 6 characters long\"\n        });\n      } else if (_this.state.Password !== _this.state.newPassword) {\n        _this.setState({\n          openSnackBar: true,\n          snackBarMessage: \"Passwords doesn't match!\"\n        });\n      } else {\n        event.preventDefault();\n        var current_url = window.location.pathname;\n        var verify_user_token = current_url.substr(19);\n        console.log(verify_user_token);\n        console.log(\"current \", current_url);\n        resetPassword(_this.state.Password, verify_user_token).then(function (response) {\n          console.log(response);\n\n          _this.setState({\n            openSnackBar: true,\n            snackBarMessage: \"Password changed successfully\"\n          });\n\n          _this.props.props.history.push(\"/\");\n        }).catch(function (err) {\n          console.log(err);\n\n          _this.setState({\n            openSnackBar: true,\n            snackBarMessage: \"Please Try Again..\"\n          });\n        });\n      }\n    };\n\n    _this.resetForm = function () {\n      _this.setState(_this.baseState);\n    };\n\n    _this.handleSnackClose = function () {\n      _this.setState({\n        openSnackBar: false\n      });\n    };\n\n    _this.state = {\n      Password: \"\",\n      newPassword: \"\",\n      snackBarMessage: \"\"\n    };\n    _this.baseState = _this.state;\n    return _this;\n  }\n\n  _createClass(ResetPassword, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"ResetPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"Resetpwd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Inputs, {\n        type: \"password\",\n        className: \"form-control\",\n        id: this.state.Password,\n        name: \"Password\",\n        placeholder: \"New Password\",\n        value: this.state.Password,\n        onChange: this.handlePasswordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), \"  \", React.createElement(Inputs, {\n        type: \"password\",\n        className: \"form-control\",\n        id: this.state.newPassword,\n        name: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        value: this.state.newPassword,\n        onChange: this.handlenewPasswordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"Login_Forgot_Buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Buttons, {\n        label: \"Submit\",\n        color: \"primary\",\n        title: \"Submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"left\"\n        },\n        open: this.state.openSnackBar,\n        autoHideDuration: 5000,\n        onClose: this.handleSnackClose,\n        variant: \"error\",\n        ContentProps: {\n          \"aria-describedby\": \"message-id\"\n        },\n        message: React.createElement(\"span\", {\n          id: \"message-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \" \", this.state.snackBarMessage, \" \"),\n        action: [React.createElement(\"div\", {\n          key: \"undo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(Buttons, {\n          label: \"X\",\n          color: \"primary\",\n          title: \"close\",\n          onClick: this.handleSnackClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ResetPassword;\n}(Component);\n\nexport { ResetPassword as default };","map":{"version":3,"sources":["/home/admin1/chatapp/client/src/screens/resetPassword.js"],"names":["React","Component","resetPassword","Buttons","Inputs","Snackbar","ResetPassword","props","handlePasswordChange","event","Password","target","value","setState","handlenewPasswordChange","newPassword","handleSubmit","preventDefault","state","openSnackBar","snackBarMessage","length","current_url","window","location","pathname","verify_user_token","substr","console","log","then","response","history","push","catch","err","resetForm","baseState","handleSnackClose","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { resetPassword } from \"../services/userServices\";\nimport Buttons from \"../components/button\";\nimport Inputs from \"../components/input\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nexport default class ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Password: \"\",\n      newPassword: \"\",\n      snackBarMessage: \"\"\n    };\n    this.baseState = this.state;\n  }\n  handlePasswordChange = event => {\n    const Password = event.target.value;\n    this.setState({ Password: Password });\n  };\n\n  handlenewPasswordChange = event => {\n    const newPassword = event.target.value;\n    this.setState({ newPassword: newPassword });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.Password === \"\") {\n      this.setState({\n        openSnackBar: true,\n        snackBarMessage: \"Password cannot be empty\"\n      });\n    } else if (this.state.newPassword === \"\") {\n      this.setState({\n        openSnackBar: true,\n        snackBarMessage: \"Confirm Password cannot be empty\"\n      });\n    } else if (this.state.Password.length < 6) {\n      this.setState({\n        openSnackBar: true,\n        snackBarMessage: \"Password must be of atleast 6 characters long\"\n      });\n    } else if (this.state.newPassword.length < 6) {\n      this.setState({\n        openSnackBar: true,\n        snackBarMessage: \"Confirm Password must be of atleast 6 characters long\"\n      });\n    } else if (this.state.Password !== this.state.newPassword) {\n      this.setState({\n        openSnackBar: true,\n        snackBarMessage: \"Passwords doesn't match!\"\n      });\n    } else {\n      event.preventDefault();\n      let current_url = window.location.pathname;\n      let verify_user_token = current_url.substr(19);\n      console.log(verify_user_token);\n      console.log(\"current \", current_url);\n      resetPassword(this.state.Password, verify_user_token)\n        .then(response => {\n          console.log(response);\n          this.setState({\n            openSnackBar: true,\n            snackBarMessage: \"Password changed successfully\"\n          });\n          this.props.props.history.push(\"/\");\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            openSnackBar: true,\n            snackBarMessage: \"Please Try Again..\"\n          });\n        });\n    }\n  };\n\n  resetForm = () => {\n    this.setState(this.baseState);\n  };\n\n  handleSnackClose = () => {\n    this.setState({\n      openSnackBar: false\n    });\n  };\n  render() {\n    return (\n      <div id=\"ResetPassword\">\n      \n        <center>\n          <div id=\"Resetpwd\">\n            <Inputs\n              type={\"password\"}\n              className={\"form-control\"}\n              id={this.state.Password}\n              name={\"Password\"}\n              placeholder={\"New Password\"}\n              value={this.state.Password}\n              onChange={this.handlePasswordChange}\n            />\n            {\"  \"}\n            <Inputs\n              type={\"password\"}\n              className={\"form-control\"}\n              id={this.state.newPassword}\n              name={\"confirmPassword\"}\n              placeholder={\"Confirm Password\"}\n              value={this.state.newPassword}\n              onChange={this.handlenewPasswordChange}\n            />\n          </div>\n        <div id=\"Login_Forgot_Buttons\">\n          <Buttons\n            label={\"Submit\"}\n            color={\"primary\"}\n            title={\"Submit\"}\n            onClick={this.handleSubmit}\n          />\n        </div>\n        </center>\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\"\n          }}\n          open={this.state.openSnackBar}\n          autoHideDuration={5000}\n          onClose={this.handleSnackClose}\n          variant=\"error\"\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\"> {this.state.snackBarMessage} </span>}\n          action={[\n            <div key=\"undo\">\n              <Buttons\n                label={\"X\"}\n                color={\"primary\"}\n                title={\"close\"}\n                onClick={this.handleSnackClose}\n              />\n            </div>\n          ]}\n        />\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}