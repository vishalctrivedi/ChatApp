{"ast":null,"code":"import _classCallCheck from \"/home/admin1/chatapp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/admin1/chatapp/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/admin1/chatapp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/admin1/chatapp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/admin1/chatapp/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/admin1/chatapp/client/src/screens/forgotPassword.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { forgotPassword } from \"../services/userServices\";\nimport Buttons from \"../components/button\";\nimport Inputs from \"../components/input\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nvar ForgotPassword =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForgotPassword, _Component);\n\n  function ForgotPassword(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotPassword).call(this, props));\n\n    _this.handleuserNameChange = function (event) {\n      var userName = event.target.value;\n\n      _this.setState({\n        userName: userName\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.userName === \"\") {\n        _this.setState({\n          openSnackBar: true,\n          snackBarMessage: \"Please enter your Email\"\n        });\n      } else if (!/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(_this.state.userName)) {\n        _this.setState({\n          openSnackBar: true,\n          snackBarMessage: \"Enter valid Email\"\n        });\n      } else {\n        forgotPassword(_this.state.userName);\n      }\n    };\n\n    _this.handleSnackClose = function () {\n      _this.setState({\n        openSnackBar: false\n      });\n    };\n\n    _this.state = {\n      userName: \"\",\n      openSnackBar: false,\n      snackBarMessage: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"ForgotPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" Forgot Password?\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Enter the email address associated with your account.\"), React.createElement(Inputs, {\n        type: \"email\",\n        className: \"form-control\",\n        id: this.state.Email,\n        name: \"Email\",\n        placeholder: \"Email\",\n        value: this.state.Email,\n        onChange: this.handleuserNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"Forgot_Button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Buttons, {\n        label: \"Next\",\n        color: \"primary\",\n        title: \"Submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"left\"\n        },\n        open: this.state.openSnackBar,\n        autoHideDuration: 5000,\n        onClose: this.handleSnackClose,\n        variant: \"error\",\n        ContentProps: {\n          \"aria-describedby\": \"message-id\"\n        },\n        message: React.createElement(\"span\", {\n          id: \"message-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \" \", this.state.snackBarMessage, \" \"),\n        action: [React.createElement(\"div\", {\n          key: \"undo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Buttons, {\n          label: \"X\",\n          color: \"primary\",\n          title: \"close\",\n          onClick: this.handleSnackClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ForgotPassword;\n}(Component);\n\nexport { ForgotPassword as default };","map":{"version":3,"sources":["/home/admin1/chatapp/client/src/screens/forgotPassword.js"],"names":["React","Component","forgotPassword","Buttons","Inputs","Snackbar","ForgotPassword","props","handleuserNameChange","event","userName","target","value","setState","handleSubmit","e","preventDefault","state","openSnackBar","snackBarMessage","test","handleSnackClose","Email","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { forgotPassword } from \"../services/userServices\";\nimport Buttons from \"../components/button\";\nimport Inputs from \"../components/input\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nexport default class ForgotPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"\",\n            openSnackBar: false,\n            snackBarMessage: \"\"\n        };\n    }\n    handleuserNameChange = event => {\n        const userName = event.target.value;\n        this.setState({ userName: userName });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        if (this.state.userName === \"\") {\n            this.setState({\n                openSnackBar: true,\n                snackBarMessage: \"Please enter your Email\"\n            });\n        } else if (\n            !/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(this.state.userName)\n        ) {\n            this.setState({\n                openSnackBar: true,\n                snackBarMessage: \"Enter valid Email\"\n            });\n        } else {\n            forgotPassword(this.state.userName);\n        }\n    };\n    handleSnackClose = () => {\n        this.setState({\n            openSnackBar: false\n        });\n    };\n\n\n\n\n\n    render() {\n        return (\n            <div id=\"ForgotPassword\">\n                <center>\n                    <h3> Forgot Password?</h3>\n                    <h5>Enter the email address associated with your account.</h5>\n\n                    <Inputs\n                        type={\"email\"}\n                        className={\"form-control\"}\n                        id={this.state.Email}\n                        name={\"Email\"}\n                        placeholder={\"Email\"}\n                        value={this.state.Email}\n                        onChange={this.handleuserNameChange}\n                    />\n                    <div id=\"Forgot_Button\">\n                        <Buttons\n                            label={\"Next\"}\n                            color={\"primary\"}\n                            title={\"Submit\"}\n                            onClick={this.handleSubmit}\n                        />\n                    </div>\n                </center>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\"\n                    }}\n                    open={this.state.openSnackBar}\n                    autoHideDuration={5000}\n                    onClose={this.handleSnackClose}\n                    variant=\"error\"\n                    ContentProps={{\n                        \"aria-describedby\": \"message-id\"\n                    }}\n                    message={<span id=\"message-id\"> {this.state.snackBarMessage} </span>}\n                    action={[\n                        <div key=\"undo\">\n                            <Buttons\n                                label={\"X\"}\n                                color={\"primary\"}\n                                title={\"close\"}\n                                onClick={this.handleSnackClose}\n                            />\n                        </div>\n                    ]}\n                />\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}